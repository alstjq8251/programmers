import java.util.Arrays;
import java.util.Collection;
import java.util.*;
class Solution {
    public int solution(int[] people, int limit) {
        int answer = 0;
        int weight = 0;
        Arrays.sort(people);
        int last =0;
        int remainPeople = people.length;
        for(int i=people.length-1; i>=0; i--){
            if(people[i] <= limit/2){
                answer += Math.ceil((double)remainPeople/2);
                break;
            }else if(people[i] + people[last] <= limit){
                last++;
                remainPeople-=1;
            }
            remainPeople-=1;
            answer++;
        }
        // for(int i=0; i<people.length; i++){
        //     if(tmp[i] <= limit/2){
        //         answer += Math.ceil((double)(people.length-last)/2);
        //         break;
        //     }
        //     else if(tmp[i] + tmp[last] <= limit){
        //         last--;
        //     }
        //     answer++;
        // }
        // for(int i=0; i<people.length; i++){
        //     if(queue.isEmpty()){
        //         queue.offer(people[i]);
        //         weight += people[i];
        //     }else{
        //         while(true){
        //             if(queue.size() == 2){
        //                 weight = 0;
        //                 queue.clear();
        //                 answer++;
        //             }else if(weight + people[i] > limit){
        //                 queue.clear();
        //                 weight = 0;
        //                 answer++;
        //             }else{
        //                 weight+=people[i];
        //                 queue.offer(people[i]);
        //                 break;
        //             }
        //         }
        //     }
        // }
        return answer;
    }
}
