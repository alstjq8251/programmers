import java.util.*;
class Solution {
    public String solution(int[] numbers) {
        int[][] MaxNumber = new int[10][numbers.length];
        Map<Integer,Integer> map = new HashMap<>();
        List<Integer> al = new ArrayList<>();
        Set<Integer> set = new HashSet<>();
        int matchNumber=0;
        int temporalNumber=0;
        int finalNumber=0;
        int length=0;
        int first=0;
        int origin=0;
        StringBuilder sb = new StringBuilder();
        for(int i=0; i<numbers.length; i++){
            length = (int)(Math.log10(numbers[i])+1);
            if(length < 2){
                first = numbers[i];
            }else if(length < 3){
                first = numbers[i]/10;
            }else if(length<4){
                first = numbers[i]/100;
            }else if(length == 4){
                first = numbers[i]/1000;
            }
            if(map.containsKey(first)){
                origin = map.get(first)+1;
                MaxNumber[first][origin-1] = numbers[i];
                map.replace(first,origin);
            }else{
                MaxNumber[first][0] = numbers[i];
                map.put(first,1);
            }
        }
        for(int i=9; i>0; i--){
            if(map.containsKey(i)){
                if(map.get(i) == 1){
                    sb.append(MaxNumber[i][0]);
                }else{
                    matchNumber = 9;
                    while(matchNumber>-1){
                        for(int y=0; y<map.get(i); y++){
                            if(!set.contains(MaxNumber[i][y])){
                                length = (int)(Math.log10(MaxNumber[i][y])+1);
                                if(i == 9){
                                    if(length == 1){
                                        sb.append(MaxNumber[i][y]);
                                        set.add(MaxNumber[i][y]);
                                    }else if(length == 2){
                                        if(MaxNumber[i][y]%10 == matchNumber){
                                            temporalNumber = MaxNumber[i][y];
                                            set.add(MaxNumber[i][y]);
                                        }
                                    }else if(length == 3){
                                        if((MaxNumber[i][y]%100)/10 == matchNumber){
                                            al.add(MaxNumber[i][y]);
                                        }
                                    }else
                                        finalNumber = MaxNumber[i][y];
                                }else{
                                    if(length == 1){
                                        if(matchNumber == i){
                                            sb.append(MaxNumber[i][y]);
                                            set.add(MaxNumber[i][y]);
                                        }
                                    }else if(length == 2){
                                        if(MaxNumber[i][y]%10 == matchNumber){
                                            temporalNumber = MaxNumber[i][y];
                                            set.add(MaxNumber[i][y]);
                                        }
                                    }else if(length == 3){
                                        if((MaxNumber[i][y]%100)/10 == matchNumber){
                                            al.add(MaxNumber[i][y]);
                                        }
                                    }else if(length == 4)
                                        finalNumber = MaxNumber[i][y];
                                }
                            }
                        }
                        Collections.sort(al, Collections.reverseOrder());
                        if(al.size() == 0){
                            if(temporalNumber!=0){
                                sb.append(temporalNumber);
                                temporalNumber = 0;
                            }
                        }else{
                            if(temporalNumber!=0){
                                for(int z=0; z<al.size(); z++){
                                    if(temporalNumber/10 > al.get(z)%10){
                                        sb.append(temporalNumber);
                                        temporalNumber =0;
                                    }
                                    sb.append(al.get(z));
                                }
                            }else{
                                for(int z=0; z<al.size(); z++){
                                    sb.append(al.get(z));
                                }
                            }
                            al.clear();
                        }
                        if(temporalNumber != 0){
                            sb.append(temporalNumber);
                            temporalNumber=0;
                        }
                        if(length == 4)
                            sb.append(finalNumber);
                        matchNumber--;
                    }
                }
            }
        }
        String answer = sb.toString();
        return answer;
    }
}
