import java.util.*;
class Solution {
    public String[] solution(String[] record) {
        Map<String,String> map = new HashMap<>();
        List<String> arr1 = new ArrayList<>();
        int length = record.length;
        String name = "";
        List<String> arr;
        for(int i=record.length-1; i>=0; i--){
            arr = new ArrayList(Arrays.asList(record[i].split(" ")));
            if(arr.size() > 2){
                name = map.getOrDefault(arr.get(1),arr.get(2));
                map.put(arr.get(1),name);
                if(arr.get(0).equals("Change")){
                    length--;
                }
            }
        }
        String[] answer = new String[length];
        length =0;
        for(int i=0; i<record.length; i++){
            arr = new ArrayList(Arrays.asList(record[i].split(" ")));
            if(arr.get(0).equals("Enter")){
                answer[length++] = map.get(arr.get(1)) + "님이 들어왔습니다.";
            }else if(arr.get(0).equals("Leave")){
                answer[length++] = map.get(arr.get(1)) + "님이 나갔습니다.";
            }
        }
        return answer;
    }
}

// 아래는 알고리즘을 클래스를 활용하여 푼 것인데 list나 map으로도 담을 수 없는 것들(4가지 종류의 데이터 , 5가지)등등은 객체를 활용하여 푸는것이 좋음
// 아래의 풀이과정을 숙달해놓자
// 다만 내 풀이과정이 아래보다 속도가 더 빠름

import java.util.ArrayList;
import java.util.HashMap;

class Solution {
    private static final String ENTER_FORMAT = "%s님이 들어왔습니다.";
    private static final String LEAVE_FORMAT = "%s님이 나갔습니다.";

    private HashMap<String, UserInfo> userMap = new HashMap<>();

    private class UserInfo {
        public String userId;
        public String nickName;

        public UserInfo(String userId, String nickName) {
            this.userId = userId;
            this.nickName = nickName;
        }

    }

    private class Command {
        public char command;
        public String userId;

        public Command(char command, String userName) {
            this.command = command;
            this.userId = userName;
        }
    }


    public String[] solution(String[] records) {
        ArrayList<Command> commandList = new ArrayList<>();

        for (String record : records) {
            String[] split = record.split(" ");
            String command = split[0];
            String userId = split[1];
            String nickName = null;

            switch(command.charAt(0)) {
                case 'E': // Enter
                    nickName = split[2];
                    if(userMap.containsKey(userId) == false) {
                        userMap.put(userId, new UserInfo(userId, nickName));
                    } else {
                        userMap.get(userId).nickName = nickName;
                    }

                    commandList.add(new Command(command.charAt(0), userId));
                    break;
                case 'L': // Leave
                    commandList.add(new Command(command.charAt(0), userId));
                    break;
                case 'C': // Change
                    nickName = split[2];
                    userMap.get(userId).nickName = nickName;
                    break;
            }
        }

        return commandList.stream()
                .map(cmd -> String.format( cmd.command == 'E' ? ENTER_FORMAT : LEAVE_FORMAT , userMap.get(cmd.userId).nickName))
                .toArray(ary -> new String[commandList.size()]);
    }
}
